name: Build and publish libBLS
on:
  push:
    branches:
      - master
      - develop
      - beta
      - stable
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Extract repo name
        run: echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: Checkout
        uses: actions/checkout@v2

      - name: Update apt
        run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test; sudo apt-get update
      - name: Install packages
        run: |
          sudo apt-get install -y software-properties-common
          sudo apt-get install -y gcc-9 g++-9
      - name: use g++-9 by default
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9

      - name: Install more packages
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format-6.0 gawk sed shtool \
            libffi-dev yasm texinfo flex bison gcc-multilib
      - name: Build dependencies
        run: |
          export CC=gcc-9
          export CXX=g++-9
          export TARGET=all
          cd deps
          ./build.sh

      - name: Configure all
        run: |
          export CC=gcc-9
          export CXX=g++-9
          export TARGET=all
          mkdir -p build && cd build
          cmake ..
      
      - name: Build all
        run: |
          export CC=gcc-9
          export CXX=g++-9
          export TARGET=all
          cd build
          make -j$(nproc)
      
      - name: Calculate version
        run: |
          export BRANCH=${GITHUB_REF##*/}
          echo "Branch $BRANCH"
          export VERSION=$(cat VERSION.txt)
          export VERSION=$(bash ./scripts/calculate_version.sh $BRANCH $VERSION)
          echo "::set-env name=VERSION::$VERSION"
          echo "Version $VERSION"
          export RELEASE=true
          echo "::set-env name=RELEASE::$RELEASE"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          draft: false
          prerelease: true

      - name: Upload bls_glue to Release
        uses: actions/upload-release-asset@latest
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/bls_glue
          asset_name: bls_glue
          asset_content_type: application/octet-stream

      - name: Upload hash_g1 to Release
        uses: actions/upload-release-asset@latest
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/hash_g1
          asset_name: hash_g1
          asset_content_type: application/octet-stream

      - name: Upload verify_bls to Release
        uses: actions/upload-release-asset@latest
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/verify_bls
          asset_name: verify_bls
          asset_content_type: application/octet-stream