name: Build and test libBLS
on:
  push:
    branches-ignore:
      - 'develop'
      - 'master'
      - 'beta'
      - 'stable'
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Extract repo name
      run: echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
      shell: bash
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    - name: Checkout
      uses: actions/checkout@v2
    - name: Update apt
      run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test;
    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install g++-7 clang-format-6.0 gawk sed shtool \
          libffi-dev yasm texinfo flex bison \
          python3.6 lcov # libc6-dbg:i386 libc6-dbg
        sudo apt-get update -qq
        sudo apt install python3-pip
        pip3 install --upgrade pip
        sudo python3.6 -m pip install --upgrade pip
        sudo python3.6 -m pip install pyopenssl ndg-httpsclient pyasn1
        sudo python3.6 -m pip install requests[security]
        sudo python3.6 -m pip install codecov --ignore-installed

    - name: Build dependencies
      run: |
        export CC=gcc-7
        export CXX=g++-7
        export TARGET=all
        export CODE_COVERAGE=ON
        cd deps
        ./build.sh

    - name: Configure all
      run: |
        export CC=gcc-7
        export CXX=g++-7
        export TARGET=all
        export CMAKE_BUILD_TYPE=Debug
        export CODE_COVERAGE=ON
        mkdir -p build && cd build
        cmake ..
    
    - name: Run format check
      run: |
        cd build
        make bls-format-check

    - name: Build all
      run: |
        export CC=gcc-7
        export CXX=g++-7
        export TARGET=all
        export CMAKE_BUILD_TYPE=Debug
        export CODE_COVERAGE=ON
        cd build
        make -j$(nproc)

    - name: Run tests
      run: |
        cp scripts/parameters.json build/
        cd build
        ./bls_unit_test
        ./dkg_unit_test
        ./bls_test
        ./threshold_encryption/dkg_te_unit_test
        ./threshold_encryption/te_unit_test
        ./threshold_encryption/te_test
        ./dkg_attack

    - name: Upload coverage
      run: |
        cd build
        lcov --capture --directory . --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
        lcov --remove coverage.info 'deps/*' --output-file coverage.info # filter dependency files
        lcov --list coverage.info # debug info

        # Uploading report to CodeCov
        bash <(curl -s https://codecov.io/bash) -f coverage.info -t $CODECOV_TOKEN || echo "Codecov did not collect coverage reports" 